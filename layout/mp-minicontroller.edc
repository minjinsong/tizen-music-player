
#define MINI_W 692
#define MINI_H 178
#define TOP_PADDING 20
#define LEFT_PADDING 14
#define RIGHT_PADDING 4
#define BOTTOM_PADDING 28
#define ALBUM_ART_WIDTH 102
#define ALBUM_ART_HEIGHT 102
#define BUTTON_SIZE_MIN_MAX	70 70
#define BUTTON_EXPAND_OFFSET 15

#define MC_BG						30 28 28 255

#define MC_IMG_REW_NORMAL			"mini_controller/quick_btn_music_prev_nor.png"
#define MC_IMG_REW_PRESSED			"mini_controller/quick_btn_music_prev_press.png"
#define MC_IMG_PLAY_NORMAL			"mini_controller/quick_btn_music_play_nor.png"
#define MC_IMG_PLAY_PRESSED			"mini_controller/quick_btn_music_play_press.png"
#define MC_IMG_PAUSE_NORMAL			"mini_controller/quick_btn_music_pause_nor.png"
#define MC_IMG_PAUSE_PRESSED		"mini_controller/quick_btn_music_pause_press.png"
#define MC_IMG_FF_NORMAL			"mini_controller/quick_btn_music_next_nor.png"
#define MC_IMG_FF_PRESSED			"mini_controller/quick_btn_music_next_press.png"
#define MC_IMG_BTN_BG_NORMAL		"mini_controller/quick_btn_music_large_bg_normal.png"
#define MC_IMG_BTN_BG_PRESSED		"mini_controller/quick_btn_music_large_bg_press.png"
#define MC_IMG_ALBUMART_BG			"mini_controller/quick_icon_bg.png"
#define MC_IMG_ALBUMART_MASK		"mini_controller/quick_albumart_mask.png"

#define MC_PART_AREA_FROM_LEFT(__name, __left_part, __width, __height) \
part { name: __name; \
	type: RECT; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1 { relative: 1.0 0.5; to: __left_part; } \
		rel2 { relative: 1.0 0.5; to: __left_part; } \
		min: __width __height; \
		fixed: 1 1; \
		align: 0.0 0.5; \
		visible: 0; \
	} \
}

#define MC_PART_ICON_BTN(__name, __to, __normal, __pressed) \
part { name: __name"_clip"; \
	type: RECT; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		color: 255 255 255 255; \
	} \
	description { state: "hide" 0.0; \
		inherit: "default" 0.0; \
		visible: 0; \
	} \
} \
part { name: __name"_bg"; \
	type: IMAGE; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1 { relative: 0.5 0.5; to: __to; } \
		rel2 { relative: 0.5 0.5; to: __to; }\
		min: BUTTON_SIZE_MIN_MAX; \
		max: BUTTON_SIZE_MIN_MAX; \
		image.normal: __normal; \
		fixed: 1 1; \
		align: 0.5 0.5; \
	} \
	description { state: "pressed" 0.0; \
		inherit: "default" 0.0; \
		image.normal: __pressed; \
	} \
} \
part { name: __name; \
	type: RECT; \
	scale: 1; \
	mouse_events: 1; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		color: 0 0 0 0; \
	} \
}

#define MC_PART_TEXT_BTN(__name, __to, __text_part_name) \
part { name: __name"_clip"; \
	type: RECT; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
		color: 255 255 255 255; \
	} \
	description { state: "hide" 0.0; \
		inherit: "default" 0.0; \
		visible: 0; \
	} \
} \
part { name: __name"_bg"; \
	type: IMAGE; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
		image.normal: MC_IMG_BTN_BG_NORMAL; \
	} \
	description { state: "pressed" 0.0; \
		inherit: "default" 0.0; \
		image.normal: MC_IMG_BTN_BG_PRESSED; \
	} \
} \
part { name: __text_part_name; \
	type: TEXT; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		text { \
			font: "SLP:style=Medium"; \
			text_class: "slp_medium"; \
			size: 28; \
			align: 0.5 0.5; \
		} \
		color: 149 149 149 255; \
	} \
} \
part { name: __name; \
	type: RECT; \
	scale: 1; \
	mouse_events: 1; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
		color: 0 0 0 0; \
	} \
}


#define MC_PROGRAM_BTN_ACTION(__btn, __down_emission, __down_src, __up_emission, __up_src, __clicked_emission, __clicked_src) \
program { \
	signal: "mouse,down,1"; \
	source: __btn; \
	script { \
		set_state(PART:__btn"_bg", "pressed", 0.0); \
		emit(__down_emission, __down_src); \
	} \
} \
program { \
	signal: "mouse,up,1"; \
	source: __btn; \
	script { \
		set_state(PART:__btn"_bg", "default", 0.0); \
		emit(__up_emission, __up_src); \
	} \
} \
program { \
	signal: "mouse,clicked,1"; \
	source: __btn; \
	action: SIGNAL_EMIT __clicked_emission __clicked_src; \
}

#define MC_PROGRAM_BTN_VISIBLE(__btn, __show_signal, __hide_signal) \
program { \
	signal: __show_signal; \
	source: "*"; \
	action: STATE_SET "default" 0.0; \
	target: __btn"_clip"; \
} \
program { \
	signal: __hide_signal; \
	source: "*"; \
	action: STATE_SET "hide" 0.0; \
	target: __btn"_clip"; \
}

collections {
group {
	name: music-minicontroller;
	images {
		image: MC_IMG_REW_NORMAL COMP;
		image: MC_IMG_REW_PRESSED COMP;
		image: MC_IMG_PLAY_NORMAL COMP;
		image: MC_IMG_PLAY_PRESSED COMP;
		image: MC_IMG_PAUSE_NORMAL COMP;
		image: MC_IMG_PAUSE_PRESSED COMP;
		image: MC_IMG_FF_NORMAL COMP;
		image: MC_IMG_FF_PRESSED COMP;
		image: MC_IMG_BTN_BG_NORMAL COMP;
		image: MC_IMG_BTN_BG_PRESSED COMP;
		image: MC_IMG_ALBUMART_BG COMP;
		image: MC_IMG_ALBUMART_MASK COMP;
	}
	parts {
		part{ name: "bg";
			type : RECT;
			scale : 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min : 0 MINI_H;
				fixed: 0 1;
				rel1{ relative : 0 0;}
				rel2{ relative : 1 1;}
				color : MC_BG;
			}
		}

		part { name: "padding.top";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 1 0; to: "bg"; }
				min: 0 TOP_PADDING;
				fixed: 0 1;
				align: 0 0;
				visible: 0;
			}
		}

		part { name: "padding.left";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 0 1; to: "bg"; }
				min: LEFT_PADDING 0;
				fixed: 1 0;
				align: 0 0;
				visible: 0;
			}
		}

		part { name: "padding.right";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1 0; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: RIGHT_PADDING 0;
				fixed: 1 0;
				align: 1 0;
				visible: 0;
			}
		}

		part { name: "padding.bottom";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 BOTTOM_PADDING;
				fixed: 0 1;
				align: 0 1;
				visible: 0;
			}
		}

		part { name: "albumarmt_bg";
			type: IMAGE;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.5; to: "padding.right"; }
				rel2 { relative: 0.0 0.5; to: "padding.right"; }
				min: 128 128;
				max: 128 128;
				fixed: 1 1;
				align: 1.0 0.5;
				image.normal: MC_IMG_ALBUMART_BG;
			}
		}

		part { name: "albumart_image";
			type: SWALLOW;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				rel2 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				min: ALBUM_ART_WIDTH ALBUM_ART_HEIGHT;
				max: ALBUM_ART_WIDTH ALBUM_ART_HEIGHT;
				fixed: 1 1;
				align: 0.5 0.5;
			}
		}

		part { name: "albumart_mask";
			type: IMAGE;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1.to: "albumart_image";
				rel2.to: "albumart_image";
				image.normal: MC_IMG_ALBUMART_MASK;
			}
		}

		part { name: "albumart_area_left_padding";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to_x: "albumarmt_bg"; }
				rel2 { relative: 0.0 1.0; to_x: "albumarmt_bg"; }
				min: 10 0;
				fixed: 1 0;
				align: 1.0 0.5;
				visible: 0;
			}
		}

		part { name: "elm.text.app_name";
			type: TEXT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "padding.left"; to_y: "padding.top"; }
				rel2 { relative: 1.0 1.0; to_x: "padding.left"; to_y: "padding.top"; }
				min: 0 50;
				fixed: 0 1;
				align: 0.0 0.0;
				text {
					font: "font=SLP:style=Regular";
					text_class: "slp_regular";
					size: 44;
					align: 0.0 0.5;
					min: 1 1;
				}
				color: 248 246 239 255;
			}
		}

		part { name: "title_right_padding";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 0.0; to: "elm.text.app_name"; }
				rel2 { relative: 1.0 1.0; to: "elm.text.app_name"; }
				min: 14 0;
				fixed: 1 0;
				align: 0.0 0.0;
				visible: 0;
			}
		}

		part { name: "elm.text";		// title
			type: TEXT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 { relative: 1.0 0.5; to: "title_right_padding"; }
			   rel2 { relative: 0.0 0.5; to_x: "albumart_area_left_padding"; to_y: "title_right_padding"; }
			   min: 0 38;
			   fixed: 0 1;
			   align: 0.0 0.5;
			   text {
					font: "font=SLP:style=Medium";
					text_class: "slp_medium";
					size: 28;
					align: 0.0 0.5;
					min: 0 1;
				}
				color: 255 255 255 128;
			}
		}

		part { name: "padding.center";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 1.0; to_y: "elm.text.app_name"; }
				rel2 { relative: 1.0 1.0; to_y: "elm.text.app_name"; }
				min: 0 10;
				fixed: 0 1;
				align: 0.0 0.0;
				visible: 0;
			}
		}

		part { name: "button_area";
			type: RECT;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 1 1; to_x: "padding.left"; to_y: "padding.center"; }
				rel2 { relative: 0 0; to_x: "albumart_area_left_padding"; to_y: "padding.bottom"; }
				visible: 0;
			}
		}

		part { name: "rew_btn_area";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.5; to: "button_area"; }
				rel2 { relative: 0.0 0.5; to: "button_area"; }
				min: BUTTON_SIZE_MIN_MAX;
				fixed: 1 1;
				align: 0.0 0.5;
				visible: 0;
			}
		}
		MC_PART_ICON_BTN("rew_btn", "rew_btn_area", MC_IMG_REW_NORMAL, MC_IMG_REW_PRESSED)

		MC_PART_AREA_FROM_LEFT("rew_right_padding", "rew_btn_area", 36, 70)

		MC_PART_AREA_FROM_LEFT("play_pause_btn_area", "rew_right_padding", 70, 70)
		MC_PART_ICON_BTN("play_btn", "play_pause_btn_area", MC_IMG_PLAY_NORMAL, MC_IMG_PLAY_PRESSED)
		MC_PART_ICON_BTN("pause_btn", "play_pause_btn_area", MC_IMG_PAUSE_NORMAL, MC_IMG_PAUSE_PRESSED)

		MC_PART_AREA_FROM_LEFT("play_pause_right_padding", "play_pause_btn_area", 36, 70)

		MC_PART_AREA_FROM_LEFT("ff_btn_area", "play_pause_right_padding", 70, 70)
		MC_PART_ICON_BTN("ff_btn", "ff_btn_area", MC_IMG_FF_NORMAL, MC_IMG_FF_PRESSED)
#if 0
		MC_PART_AREA_FROM_LEFT("ff_right_padding", "ff_btn_area", 92, 70)

		MC_PART_AREA_FROM_LEFT("shuffle_btn_area", "ff_right_padding", 196, 70)
		MC_PART_TEXT_BTN("shuffle_btn", "shuffle_btn_area", "shuffle_btn_text")

		MC_PART_AREA_FROM_LEFT("shuffle_right_padding", "shuffle_btn_area", 14, 70)

		MC_PART_AREA_FROM_LEFT("repeat_btn_area", "shuffle_right_padding", 196, 70)
		MC_PART_TEXT_BTN("repeat_btn", "repeat_btn_area", "repeat_btn_text")
#endif
	}

	programs {
		MC_PROGRAM_BTN_ACTION("rew_btn", "rew_btn_down", "edje", "rew_btn_up", "edje", "rew_btn_clicked", "edje")

		MC_PROGRAM_BTN_ACTION("play_btn", "play_btn_down", "edje", "play_btn_up", "edje", "play_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("play_btn", "show_play_btn", "hide_play_btn")

		MC_PROGRAM_BTN_ACTION("pause_btn", "pause_btn_down", "edje", "pause_btn_up", "edje", "pause_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("pause_btn", "show_pause_btn", "hide_pause_btn")

		MC_PROGRAM_BTN_ACTION("ff_btn", "ff_btn_down", "edje", "ff_btn_up", "edje", "rew_btn_clicked", "edje")

#if 0
		MC_PROGRAM_BTN_ACTION("shuffle_btn", "shuffle_btn_down", "edje", "shuffle_btn_up", "edje", "shuffle_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("shuffle_btn", "show_shuffle_btn", "hide_shuffle_btn")

		MC_PROGRAM_BTN_ACTION("repeat_btn", "repeat_btn_down", "edje", "repeat_btn_up", "edje", "repeat_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("repeat_btn", "show_repeat_btn", "hide_repeat_btn")
#endif

		program { name: "albumart_cb";
		   signal: "mouse,clicked,1";
		   source: "albumart_image";
			script{
			   emit("albumart_clicked", "edje");
		   }
		}

		program { name: "set_pause_icon";
		   signal: "set_pause";
		   source: "*";
		   script{
				emit("hide_play_btn", "edje");
				emit("show_pause_btn", "edje");
		   }
		}
		program { name: "set_play_icon";
		   signal: "set_play";
		   source: "*";
		   script{
				emit("show_play_btn", "edje");
				emit("hide_pause_btn", "edje");
		   }
		}
#if 0
		program { name: "pgm_set_landscape_mode";
			signal: "sig_set_landscape_mode";
			source: "*";
			script {
				emit("show_shuffle_btn", "edje")
				emit("show_repeat_btn", "edje")
			}
		}
		program { name: "pgm_set_portrait_mode";
			signal: "sig_set_portrait_mode";
			source: "*";
			script {
				emit("hide_shuffle_btn", "edje")
				emit("hide_repeat_btn", "edje")
			}
		}
#endif
	}

} // group
} // collection